#
# @file .github/workflows/integration_tests.yml
#
# Copyright (c) 2022 OPTIMETA project
# Copyright (c) 2022 Daniel NÃ¼st
# Distributed under the GNU GPL v3. For full terms see the file LICENSE.
#
# Based on https://github.com/o2r-project/ojs-erc-plugin/blob/master/.github/workflows/cypress_test.yml
#
name: OPTIMETA Geoplugin CI Test

on:
  push:
    branches:
      - main

jobs:
  geoplugin:
    name: ${{ matrix.pkp-application }} version ${{ matrix.pkp-version }} with ${{ matrix.dbs }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        # php-versions: ['7.3',"7.4",'8.0'] # relies on PHP version from OJS image
        dbs: [
            #'pgsql',
            "mysql",
          ]
        pkp-application: ["ojs"]
        #'omp',
        #'ops'
        pkp-version: [
            #"stable-3_2_1",
            "3_3_0-11",
          ]
    env:
      OJS_VERSION: ${{ matrix.pkp-version }}
    
    steps:
      - name: Pre-pull images
        run: |
          docker pull pkpofficial/ojs:${{ matrix.pkp-version }}
          docker pull mariadb:10.2
          docker pull cypress/included:10.2.0

      - name: Install docker-compose
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install docker-compose

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install test dependencies
        run: |
          npm install

      - name: Checkout theme plugin
        run: |
          cd ${{ github.workspace }}/..
          git clone https://github.com/ifgi/optimetaGeoTheme

      - name: Start OJS and database
        run: |
          chmod -R 777 .
          docker-compose --file cypress/docker-compose-${{ matrix.dbs }}.yml up -d

      #- name: Run Cypress in container, see https://github.com/cypress-io/cypress-example-docker-compose/blob/master/docker-compose.yml and 
      #  run: |
      #    docker run -v $PWD:/optimetaGeo  -w /optimetaGeo --entrypoint=cypress --network="cypress_inside" --name cypress-docker cypress/included:10.2.0 run
      - name: Run Cypress
        run: |
          npx cypress run --headless --browser chrome

      - name: Show logs
        if: ${{ failure() }}
        run: |
          docker logs db
          docker logs ojs
          cat cypress/logs/*.log

      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots for ${{ matrix.pkp-application }} with ${{ matrix.dbs }}
          path: |
            ${{ github.workspace }}/cypress/screenshots

      - name: Upload videos
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: videos for ${{ matrix.pkp-application }} with ${{ matrix.dbs }}
          path: |
            ${{ github.workspace }}/cypress/videos
